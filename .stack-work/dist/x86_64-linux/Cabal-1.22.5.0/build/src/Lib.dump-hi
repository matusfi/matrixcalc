
==================== FINAL INTERFACE ====================
2016-03-22 07:05:47.822534 UTC

interface matri_HwLmQRBThLXJcxovqXtkOW:Lib 7103
  interface hash: f8e90a87d20db4914c2fa230d4ef4f63
  ABI hash: 03155ed2295a2babbbf908252c1e32ae
  export-list hash: c8dc83b50d48312283011456a74c6688
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f0b7cd3f8898cb0f9436f08902b42484
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.mtx
  Lib.Matrix{Lib.Matrix Lib.matrix}
module dependencies:
package dependencies: aeson-0.9.0.1@aeson_4DY0XuZwIhtELfRFH9qUul
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.1@attop_5BMY90empToJCYpnsukIZC base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_8GjadD03dR57AKCJdr90LD integer-gmp-1.0.0.0
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      scientific-0.3.4.6@scien_1OnQq6NJ9k3LnQc0gkGZFN
                      text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unordered-containers-0.2.5.1@unord_8BVO2aaPxdK7U6ObhjDGGE
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
orphans: aeson-0.9.0.1@aeson_4DY0XuZwIhtELfRFH9qUul:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_4DY0XuZwIhtELfRFH9qUul:Data.Aeson.Types.Instances
         attoparsec-0.13.0.1@attop_5BMY90empToJCYpnsukIZC:Data.Attoparsec.ByteString.Char8
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_8GjadD03dR57AKCJdr90LD:Data.Hashable.Generic
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Lazy
         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.1@attop_5BMY90empToJCYpnsukIZC:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text
                         text-1.2.2.0@text_5c7VCmRXJenGcMPs3kwpkI:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_8BVO2aaPxdK7U6ObhjDGGE:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_8BVO2aaPxdK7U6ObhjDGGE:Data.HashSet
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  aeson-0.9.0.1@aeson_4DY0XuZwIhtELfRFH9qUul:Data.Aeson d3252ab0ebec5a3c5acd4f1d57eb76ea
import  -/  aeson-0.9.0.1@aeson_4DY0XuZwIhtELfRFH9qUul:Data.Aeson.Types.Class ceef54da78fffa9e0c1db6bda89f2c63
import  -/  aeson-0.9.0.1@aeson_4DY0XuZwIhtELfRFH9qUul:Data.Aeson.Types.Instances 1c815a6641eb9ac5d8c1ca127f1e368f
import  -/  aeson-0.9.0.1@aeson_4DY0XuZwIhtELfRFH9qUul:Data.Aeson.Types.Internal fa7c2c8aa681271528de1dbce90da224
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString a7dd1816d7b9a73f13bb7af0c321dca4
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
f121da2d12fb8d1738902a8685459251
  $fFromJSONMatrix :: Data.Aeson.Types.Class.FromJSON Lib.Matrix
  DFunId[0]
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Lib.$fFromJSONMatrix_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0] <Lib.Matrix>_N)) -}
f0e45af5e23205cd567b62fa0addb734
  $fFromJSONMatrix1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
c7cc233b8c1afcce2b8b2f44b13e81ea
  $fFromJSONMatrix2 ::
    Data.Aeson.Types.Internal.Failure f r
    -> Data.Aeson.Types.Internal.Success [[GHC.Types.Int]] f r -> f r
  {- Arity: 2,
     Unfolding: (\ @ (f :: * -> *)
                   @ r
                   kf :: Data.Aeson.Types.Internal.Failure f r
                   _ks :: Data.Aeson.Types.Internal.Success [[GHC.Types.Int]] f r ->
                 kf Lib.$fFromJSONMatrix_msg3) -}
20d0fa2f37406cf7563192dab882819c
  $fFromJSONMatrix3 :: [GHC.Types.Char]
  {- Unfolding: (case Data.Text.Show.$w$cshow
                        Lib.$fFromJSONMatrix5 of ww { (#,#) ww1 ww2 ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   (GHC.Types.: @ GHC.Types.Char ww1 ww2)
                   Lib.$fFromJSONMatrix4 }) -}
9844fe81a18db3383c8c8c0115c6e78e
  $fFromJSONMatrix4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " not present"#) -}
b6e355f6c3db90e62cd14b03bf8ce416
  $fFromJSONMatrix5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "matrix"#) -}
f121da2d12fb8d1738902a8685459251
  $fFromJSONMatrix6 :: Data.Aeson.Types.Internal.Parser Lib.Matrix
  {- Strictness: b -}
f121da2d12fb8d1738902a8685459251
  $fFromJSONMatrix_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Lib.Matrix
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ ds :: Data.Aeson.Types.Internal.Value ->
                 case ds of wild {
                   DEFAULT -> Lib.$fFromJSONMatrix6
                   Data.Aeson.Types.Internal.Object v
                   -> let {
                        m :: Data.Aeson.Types.Internal.Parser [[GHC.Types.Int]]
                        = case Lib.$fFromJSONMatrix5 of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                          case Data.Aeson.Types.Instances.$w$slookup
                                 @ Data.Aeson.Types.Internal.Value
                                 ww1
                                 ww2
                                 ww3
                                 v of wild1 {
                            GHC.Base.Nothing
                            -> Lib.$fFromJSONMatrix2
                                 `cast`
                               (Sym (Data.Aeson.Types.Internal.NTCo:Parser[0]
                                         <[[GHC.Types.Int]]>_R))
                            GHC.Base.Just v1
                            -> case v1 of wild2 {
                                 DEFAULT
                                 -> Data.Aeson.Types.Instances.typeMismatch
                                      @ [[GHC.Types.Int]]
                                      Lib.$fFromJSONMatrix1
                                      wild2
                                 Data.Aeson.Types.Internal.Array arr
                                 -> case arr of ww4 { Data.Vector.Vector ww5 ww6 ww7 ->
                                    Lib.$wa ww5 ww6 ww7 } } } }
                      } in
                      (\ @ (f1 :: * -> *)
                         @ r
                         kf :: Data.Aeson.Types.Internal.Failure f1 r
                         ks :: Data.Aeson.Types.Internal.Success Lib.Matrix f1 r ->
                       m `cast`
                       (Data.Aeson.Types.Internal.NTCo:Parser[0] <[[GHC.Types.Int]]>_R)
                         @ f1
                         @ r
                         kf
                         (\ a30 :: [[GHC.Types.Int]] -> ks (Lib.Matrix a30)))
                        `cast`
                      (Sym (Data.Aeson.Types.Internal.NTCo:Parser[0]
                                <Lib.Matrix>_R)) }) -}
98627b8eb73ee43f95902455adc4cee6
  $fFromJSONMatrix_msg3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "key "#
                   Lib.$fFromJSONMatrix3) -}
f121da2d12fb8d1738902a8685459251
  $fShowMatrix :: GHC.Show.Show Lib.Matrix
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Lib.Matrix
                  Lib.$fShowMatrix_$cshowsPrec
                  Lib.$fShowMatrix_$cshow
                  Lib.$fShowMatrix_$cshowList -}
f121da2d12fb8d1738902a8685459251
  $fShowMatrix1 :: Lib.Matrix -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: Lib.Matrix w1 :: GHC.Base.String ->
                 case w of ww { Lib.Matrix ww1 -> Lib.$w$cshowsPrec 0 ww1 w1 }) -}
efddac6b9ed7787c0cfeffe5d11d71a2
  $fShowMatrix2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
45f0bbaea780dd1c14a4f6753d06a4e6
  $fShowMatrix3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "matrix = "#) -}
135546351345bc428aacda4bb549d778
  $fShowMatrix4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Matrix {"#) -}
f121da2d12fb8d1738902a8685459251
  $fShowMatrix_$cshow :: Lib.Matrix -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Lib.Matrix ->
                 Lib.$fShowMatrix_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
f121da2d12fb8d1738902a8685459251
  $fShowMatrix_$cshowList :: [Lib.Matrix] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Lib.Matrix Lib.$fShowMatrix1) -}
f121da2d12fb8d1738902a8685459251
  $fShowMatrix_$cshowsPrec ::
    GHC.Types.Int -> Lib.Matrix -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U(1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int w1 :: Lib.Matrix w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lib.Matrix ww3 ->
                 Lib.$w$cshowsPrec ww1 ww3 w2 } }) -}
0bd9b56de6a62c2767c6182b8ba5a5d4
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> [[GHC.Types.Int]] -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: [[GHC.Types.Int]]
                   w :: GHC.Base.String ->
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ x :: GHC.Base.String[OneShot] ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Lib.$fShowMatrix4
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Lib.$fShowMatrix3
                          (let {
                             s :: GHC.Base.String
                             = GHC.Base.++ @ GHC.Types.Char Lib.$fShowMatrix2 x
                           } in
                           case ww1 of wild {
                             [] -> GHC.CString.unpackAppendCString# "[]"# s
                             : x1 xs
                             -> GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showList__3
                                  (let {
                                     s1 :: GHC.Base.String
                                     = let {
                                         lvl17 :: [GHC.Types.Char]
                                         = GHC.Types.: @ GHC.Types.Char GHC.Show.showList__2 s
                                       } in
                                       letrec {
                                         showl :: [[GHC.Types.Int]] -> [GHC.Types.Char]
                                           {- Arity: 1, Strictness: <S,1*U> -}
                                         = \ ds2 :: [[GHC.Types.Int]] ->
                                           case ds2 of wild1 {
                                             [] -> lvl17
                                             : y ys
                                             -> GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.showList__1
                                                  (GHC.Show.showList__
                                                     @ GHC.Types.Int
                                                     GHC.Show.shows7
                                                     y
                                                     (showl ys)) }
                                       } in
                                       showl xs
                                   } in
                                   case x1 of wild1 {
                                     [] -> GHC.CString.unpackAppendCString# "[]"# s1
                                     : x2 xs1
                                     -> GHC.Types.:
                                          @ GHC.Types.Char
                                          GHC.Show.showList__3
                                          (case x2 of ww2 { GHC.Types.I# ww3 ->
                                           case GHC.Show.$wshowSignedInt
                                                  0
                                                  ww3
                                                  (let {
                                                     lvl17 :: [GHC.Types.Char]
                                                     = GHC.Types.:
                                                         @ GHC.Types.Char
                                                         GHC.Show.showList__2
                                                         s1
                                                   } in
                                                   letrec {
                                                     showl :: [GHC.Types.Int] -> [GHC.Types.Char]
                                                       {- Arity: 1, Strictness: <S,1*U> -}
                                                     = \ ds2 :: [GHC.Types.Int] ->
                                                       case ds2 of wild2 {
                                                         [] -> lvl17
                                                         : y ys
                                                         -> GHC.Types.:
                                                              @ GHC.Types.Char
                                                              GHC.Show.showList__1
                                                              (case y of ww4 { GHC.Types.I# ww5 ->
                                                               case GHC.Show.$wshowSignedInt
                                                                      0
                                                                      ww5
                                                                      (showl
                                                                         ys) of ww6 { (#,#) ww7 ww8 ->
                                                               GHC.Types.:
                                                                 @ GHC.Types.Char
                                                                 ww7
                                                                 ww8 } }) }
                                                   } in
                                                   showl xs1) of ww4 { (#,#) ww5 ww6 ->
                                           GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) }) }))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False -> p w
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w)) }) -}
00b7d5aea1b1fa21db44e471c3db1ba3
  $wa ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [[GHC.Types.Int]]
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
f121da2d12fb8d1738902a8685459251
  data Matrix = Matrix {matrix :: [[GHC.Types.Int]]}
0e126c8be3f56182b0f84d20b2fdf189
  matrix :: Lib.Matrix -> [[GHC.Types.Int]]
  RecSel Lib.Matrix
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Lib.Matrix ->
                 case ds of wild { Lib.Matrix ds1 -> ds1 }) -}
efe3ef5d2990bf3da01a85a22f8f52c6
  mtx :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "{\"matrix\": [[1,2,3],[4,5,6],[7,8,9]]}"#) -}
instance Data.Aeson.Types.Class.FromJSON [Lib.Matrix]
  = Lib.$fFromJSONMatrix
instance GHC.Show.Show [Lib.Matrix] = Lib.$fShowMatrix
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

